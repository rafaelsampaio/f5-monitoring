        input {
            http {
                port => 8514
            }
        }
        filter {
            json {
                source => "message"
                ecs_compatibility => "v1"
            }

            mutate {
                split => {
                    "[headers][x_forwarded_for]" => ","
                    "[headers][x_real_ip]" => ","
                }
                convert => {
                    "[a_reqs]" => "integer"
                    "[aaaa_reqs]" => "integer"
                    "[abandoned_conns]" => "integer"
                    "[aborts]" => "integer"
                    "[accept_fails]" => "integer"
                    "[accepted_count]" => "integer"
                    "[accepts]" => "integer"
                    "[active_conns]" => "integer"
                    "[active_translations]" => "integer"
                    "[AggrInterval]" => "integer"
                    "[any_reqs]" => "integer"
                    "[ApplicationResponseTime]" => "integer"
                    "[AttackCount]" => "integer"
                    "[avg_1min]" => "integer"
                    "[AvgBadActorDetection]" => "integer"
                    "[AvgDetection]" => "integer"
                    "[backup_pool_translations]" => "integer"
                    "[BadActorDrops]" => "integer"
                    "[BadActorEvents]" => "integer"
                    "[bd_avg_cpu_util]" => "integer"
                    "[bd_total_max_mem]" => "integer"
                    "[bd_total_mem_allocated]" => "integer"
                    "[bd_total_mem_used]" => "integer"
                    "[bd_total_xml_max_mem]" => "integer"
                    "[bd_total_xml_mem_used]" => "integer"
                    "[blade_num]" => "integer"
                    "[bytes_in]" => "integer"
                    "[bytes_out]" => "integer"
                    "[client_bytes_in]" => "integer"
                    "[client_bytes_out]" => "integer"
                    "[client_concurrent_conns]" => "integer"
                    "[client_conn_dur]" => "integer"
                    "[client_conns]" => "integer"
                    "[client_expired_conns]" => "integer"
                    "[client_max_concurrent_conns]" => "integer"
                    "[client_pkts_in]" => "integer"
                    "[client_pkts_out]" => "integer"
                    "[ClientLatencyHitCount]" => "integer"
                    "[ClientLatencyTotal]" => "integer"
                    "[ClientSideNetworkLatency]" => "integer"
                    "[ClientTtfb]" => "integer"
                    "[ClientTtfbHitcount]" => "integer"
                    "[cname_reqs]" => "integer"
                    "[connq_age_head_max]" => "integer"
                    "[connq_age_head]" => "integer"
                    "[connq_depth_max]" => "integer"
                    "[connq_depth]" => "integer"
                    "[counters_drops_in]" => "integer"
                    "[counters_drops_out]" => "integer"
                    "[counters_errors_in]" => "integer"
                    "[counters_errors_out]" => "integer"
                    "[cpu]" => "integer"
                    "[cycle_count]" => "integer"
                    "[dest_port]" => "integer"
                    "[DestinationPort]" => "integer"
                    "[dns64fails]" => "integer"
                    "[dns64reqs]" => "integer"
                    "[dns64trans]" => "integer"
                    "[dropped]" => "integer"
                    "[drops]" => "integer"
                    "[enforced_entities_count]" => "integer"
                    "[err_cksum]" => "integer"
                    "[err_len]" => "integer"
                    "[err_mem]" => "integer"
                    "[err_opt]" => "integer"
                    "[err_proto]" => "integer"
                    "[err_reassembled_too_long]" => "integer"
                    "[err_rtx]" => "integer"
                    "[expired_conns]" => "integer"
                    "[failed_conns]" => "integer"
                    "[fast_dns_allowed]" => "integer"
                    "[fast_dns_drops]" => "integer"
                    "[fast_dns_queries]" => "integer"
                    "[fast_dns_resp_ne]" => "integer"
                    "[fast_dns_resp_nx]" => "integer"
                    "[fast_dns_resp_rf]" => "integer"
                    "[fast_dns_resp_tc]" => "integer"
                    "[fast_dns_responses]" => "integer"
                    "[free_ram]" => "integer"
                    "[free_swap]" => "integer"
                    "[HardwareDrops]" => "integer"
                    "[hdr_aa]" => "integer"
                    "[hdr_ad]" => "integer"
                    "[hdr_ra]" => "integer"
                    "[hdr_tc]" => "integer"
                    "[headers][content_length]" => "integer"
                    "[headers][x_forwarded_port]" => "integer"
                    "[hints]" => "integer"
                    "[HitCount]" => "integer"
                    "[http_requests_limit]" => "integer"
                    "[http_requests]" => "integer"
                    "[http_statcode]" => "integer"
                    "[hw_cache_lookups]" => "integer"
                    "[hw_cache_responses]" => "integer"
                    "[hw_cookie_valid]" => "integer"
                    "[hw_inspected]" => "integer"
                    "[hw_malformed]" => "integer"
                    "[hw_syncookies_accepts]" => "integer"
                    "[hw_syncookies]" => "integer"
                    "[idle_ticks]" => "integer"
                    "[iowait]" => "integer"
                    "[irq]" => "integer"
                    "[malformed]" => "integer"
                    "[malicious]" => "integer"
                    "[max_active_conns]" => "integer"
                    "[max_cpu_index]" => "integer"
                    "[MaxApplicationResponseTime]" => "integer"
                    "[MaxBadActorMitigation]" => "integer"
                    "[MaxClientSideNetworkLatency]" => "integer"
                    "[MaxClientTtfb]" => "integer"
                    "[MaxMitigation]" => "integer"
                    "[MaxRequestDuration]" => "integer"
                    "[MaxResponseDuration]" => "integer"
                    "[MaxServerSideNetworkLatency]" => "integer"
                    "[MinApplicationResponseTime]" => "integer"
                    "[MinBadActorMitigation]" => "integer"
                    "[MinClientSideNetworkLatency]" => "integer"
                    "[MinClientTtfb]" => "integer"
                    "[MinMitigation]" => "integer"
                    "[MinRequestDuration]" => "integer"
                    "[MinResponseDuration]" => "integer"
                    "[MinServerSideNetworkLatency]" => "integer"
                    "[mx_reqs]" => "integer"
                    "[naptr_reqs]" => "integer"
                    "[new_conns]" => "integer"
                    "[nice]" => "integer"
                    "[noerrors]" => "integer"
                    "[ns_reqs]" => "integer"
                    "[other_free_ram]" => "integer"
                    "[other_reqs]" => "integer"
                    "[other_total_ram]" => "integer"
                    "[other_used_ram]" => "integer"
                    "[PacketsSize]" => "integer"
                    "[pending_highscore_count]" => "integer"
                    "[pending_lowscore_count]" => "integer"
                    "[pid]" => "integer"
                    "[policy_changes_count]" => "integer"
                    "[pool_port]" => "integer"
                    "[proc_id]" => "integer"
                    "[ptr_reqs]" => "integer"
                    "[queries]" => "integer"
                    "[r_noerror]" => "integer"
                    "[r_nxdomain]" => "integer"
                    "[r_refused]" => "integer"
                    "[r_servfail]" => "integer"
                    "[rd_bytes]" => "integer"
                    "[rd_lat_us]" => "integer"
                    "[rd_merged]" => "integer"
                    "[rd_ops]" => "integer"
                    "[reassembled]" => "integer"
                    "[rejects]" => "integer"
                    "[RequestDurationHitcount]" => "integer"
                    "[Requests]" => "integer"
                    "[response_code]" => "integer"
                    "[response_ms]" => "integer"
                    "[ResponseDuration]" => "integer"
                    "[ResponseDurationHitcount]" => "integer"
                    "[responses]" => "integer"
                    "[rss]" => "integer"
                    "[rx_frag_dropped]" => "integer"
                    "[rx_frag]" => "integer"
                    "[rx]" => "integer"
                    "[rxbaddgram]" => "integer"
                    "[rxbadsum]" => "integer"
                    "[rxdgram]" => "integer"
                    "[rxnosum]" => "integer"
                    "[rxunreach]" => "integer"
                    "[server_bytes_in]" => "integer"
                    "[server_bytes_out]" => "integer"
                    "[server_concurrent_conns]" => "integer"
                    "[server_conns]" => "integer"
                    "[server_max_concurrent_conns]" => "integer"
                    "[server_pkts_in]" => "integer"
                    "[server_pkts_out]" => "integer"
                    "[ServerHitcount]" => "integer"
                    "[ServerLatencyMax]" => "integer"
                    "[ServerLatencyMin]" => "integer"
                    "[ServerLatencyTotal]" => "integer"
                    "[ServerSideNetworkLatency]" => "integer"
                    "[severity]" => "integer"
                    "[SlotId]" => "integer"
                    "[soa_reqs]" => "integer"
                    "[softirq]" => "integer"
                    "[SoftwareDrops]" => "integer"
                    "[SosApplicationResponseTime]" => "integer"
                    "[SosClientSideNetworkLatency]" => "integer"
                    "[SosClientTtfb]" => "integer"
                    "[SosRequestDuration]" => "integer"
                    "[SosResponseDuration]" => "integer"
                    "[SosServerSideNetworkLatency]" => "integer"
                    "[SourcePort]" => "integer"
                    "[src_port]" => "integer"
                    "[srv_reqs]" => "integer"
                    "[stress]" => "integer"
                    "[stresscpu]" => "integer"
                    "[swap_size]" => "integer"
                    "[syncookies_accepts]" => "integer"
                    "[syncookies_rejects]" => "integer"
                    "[syncookies]" => "integer"
                    "[system_swap_size]" => "integer"
                    "[system_ticks]" => "integer"
                    "[TcDisabledRequests]" => "integer"
                    "[TcFiltersCheckPassedRequests]" => "integer"
                    "[TcMemoryCheckPassedRequests]" => "integer"
                    "[TcSamplingPassedRequest]" => "integer"
                    "[ThroughputReqTotalPerInterval]" => "integer"
                    "[ThroughputRespMaxPerSec]" => "integer"
                    "[ThroughputRespTotalPerInterval]" => "integer"
                    "[tmm_avg_cpu_util]" => "integer"
                    "[tmm_free_ram]" => "integer"
                    "[tmm_memory_total]" => "integer"
                    "[tmm_memory_used]" => "integer"
                    "[tmm_total_ram]" => "integer"
                    "[tmm_used_ram]" => "integer"
                    "[Tmm]" => "integer"
                    "[todns]" => "integer"
                    "[tot_requests]" => "integer"
                    "[total_executions]" => "integer"
                    "[total_ios]" => "integer"
                    "[total_ram]" => "integer"
                    "[total_swap]" => "integer"
                    "[TotalEvents]" => "integer"
                    "[TPSMax]" => "integer"
                    "[transactions]" => "integer"
                    "[translation_request_failures]" => "integer"
                    "[translation_requests]" => "integer"
                    "[tx_frag_dropped]" => "integer"
                    "[tx_frag]" => "integer"
                    "[tx]" => "integer"
                    "[txdgram]" => "integer"
                    "[txt_reqs]" => "integer"
                    "[udp_prof]" => "integer"
                    "[used_ram]" => "integer"
                    "[used_swap]" => "integer"
                    "[user_ticks]" => "integer"
                    "[UserSessionsConcurrentTotal]" => "integer"
                    "[UserSessionsNewTotal]" => "integer"
                    "[violation_rating]" => "integer"
                    "[WLEvents]" => "integer"
                    "[wr_bytes]" => "integer"
                    "[wr_merged]" => "integer"
                    "[wr_ops]" => "integer"
                }
            }

            if "systemInfo" in [telemetryEventCategory] {
                mutate {
                    add_field => {
                        "[@metadata][target_index]" => "systemInfo-%{+YYYY.MM.dd}"
                    }
                }
                date {
                    match => [ "[system][systemTimestamp]", "MMM d, yyyy @ HH:mm:ss.SSS" ]
                    timezone => "UTC"
                }
            }
            else if "LTM" in [telemetryEventCategory] {
                mutate {
                    add_field => {
                        "[@metadata][target_index]" => "ltm-%{+YYYY.MM.dd}"
                    }
                }
                date {
                    match => [ "[event_timestamp]","MMM d, yyyy @ HH:mm:ss.SSS" ]
                    timezone => "UTC"
                }
                geoip {
                    source => "[client_ip]"
                    target => "[client_geo]"
                }
            }
            else if "AFM" in [telemetryEventCategory] {
                mutate {
                    add_field => {
                        "[@metadata][target_index]" => "afm-%{+YYYY.MM.dd}"
                    }
                }
                date {
                    match => [ "[date_time]","MMM d, yyyy @ HH:mm:ss.SSS" ]
                    timezone => "UTC"
                }
                geoip {
                    source => "[dest_ip]"
                    target => "[dest_geo]"
                }
                geoip {
                    source => "[source_ip]"
                    target => "[source_geo]"
                }
            }
            else if "ASM" in [telemetryEventCategory] {
                mutate {
                    add_field => {
                        "[@metadata][target_index]" => "asm-%{+YYYY.MM.dd}"
                    }
                }
                date {
                    match => [ "[date_time]","MMM d, yyyy @ HH:mm:ss.SSS" ]
                    timezone => "UTC"
                }
                date {
                    match => [ "[policy_apply_date]","yyyy-MM-dd HH:mm:ss" ]
                    target => "[policy_apply_date]"
                    timezone => "UTC"
                }
                geoip {
                    source => "[dest_ip]"
                    target => "[dest_geo]"
                }
                geoip {
                    source => "[source_host]"
                    target => "[source_geo]"
                }
            }
            else if "APM" in [telemetryEventCategory] {
                mutate {
                    add_field => {
                        "[@metadata][target_index]" => "apm-%{+YYYY.MM.dd}"
                    }
                }
            }
            else if "ihealthInfo" in [telemetryEventCategory] {
                mutate {
                    add_field => {
                        "[@metadata][target_index]" => "ihealthInfo-%{+YYYY.MM.dd}"
                    }
                }
            }
            else if "AVR" in [telemetryEventCategory] {
                mutate {
                    add_field => {
                        "[@metadata][target_index]" => "avr-%{+YYYY.MM.dd}"
                    }
                }
                date {
                    match => [ "[EOCTimestamp]","UNIX" ]
                    timezone => "UTC"
                }
                if [LatencyHistogram] {
                    ruby {
                        code => "
                            histogram_hash = event.get('[LatencyHistogram]').split('|')
                            event.set('[LatencyHistogram][values]', histogram_hash[0].split(','))
                            event.set('[LatencyHistogram][counts]', histogram_hash[1].split(','))
                        "
                    }
                }
                geoip {
                    source => "[client_ip]"
                    target => "[client_geo]"
                }
            }
            else {
                mutate {
                    add_field => {
                        "[@metadata][target_index]" => "other-%{+YYYY.MM.dd}"
                    }
                }
            }
        }
        output {
            elasticsearch {
                hosts => ["http://elasticsearch-master:9200"]
                index => "f5-ts-%{[@metadata][target_index]}"
            }
        }